/*!
 * An interactive post widget for the "Summary" post type. Displays a summary of the current Tropical Weather from the
 * National Hurricane Center:
 * - Tropical Weather Outlook (TWO) - The potential areas of tropical development
 * - Automatic Tropical Cyclone Forecast (ATCF) - The detailed data generated by the ATCF for active storms
 * - Tropical Cyclone Plan of the Day (TCPOD) - The Hurricane Hunter recon schedule for missions into active storms
 *
 * Author: u/Beach-Brews
 * License: BSD-3-Clause
 */

import {Context, Devvit, useState, useAsync} from "@devvit/public-api";
import {MenuItem} from './MenuItem.js';
import {SummaryApi} from "./SummaryApi.js";
import {TwoPage} from "./two/TwoPage.js";
import {AtcfPage} from "./atcf/AtcfPage.js";
import {TcpodPage} from "./tcpod/TcpodPage.js";

export interface SummaryWidgetProps {
    context: Context;
}

export const SummaryWidget = (props: SummaryWidgetProps) => {
    const [activePage, setActivePage] = useState('TWO');

    const {data, loading, error} = useAsync(
        async () => {
            // TODO: Read from REDIS instead
            // TODO: Do not provide data if the over 24 hours old! Maybe make this a new setting as well?
            return (await fetch('https://dev.rhurricane.net/api/v1/')).json();
        },
        {
            finally: (_, error) => {
                if (error)
                    console.error(error);
            }
        }
    );
    const loaded = !loading && !error;
    const twoData: SummaryApi | null = loaded ? data : null;

    return (
        <vstack padding="small" width="100%" grow>
            <hstack gap="small">
                <MenuItem activePage={activePage} disabled={loading || !!error} setActivePage={setActivePage} count={twoData?.two?.count ?? 0} title="TWO" />
                <MenuItem activePage={activePage} disabled={loading || !!error} setActivePage={setActivePage} count={twoData?.atcf?.count ?? 0} title="ATCF" />
                <MenuItem activePage={activePage} disabled={loading || !!error} setActivePage={setActivePage} count={twoData?.tcpod?.count ?? 0} title="TCPOD" />
            </hstack>
            {!loaded && (
                <vstack grow>
                    <spacer size="medium" />
                    <vstack
                        grow
                        padding="small"
                        border="thin"
                        alignment="center middle"
                        cornerRadius="medium"
                        lightBackgroundColor="PureGray-100"
                        darkBackgroundColor="PureGray-800"
                        lightBorderColor="PureGray-300"
                        darkBorderColor="PureGray-600"
                    >
                        <text weight="bold" size="large">
                            {
                                !loading && error
                                ? 'An error has occurred. Please try again later.'
                                : 'Loading Tropical Weather Outlook...'
                            }
                        </text>
                    </vstack>
                </vstack>
            )}
            {loaded && activePage === 'TWO' && <TwoPage context={props.context} two={twoData?.two?.data} />}
            {loaded && activePage === 'ATCF' && <AtcfPage context={props.context} atcf={twoData?.atcf?.data} />}
            {loaded && activePage === 'TCPOD' && <TcpodPage context={props.context} tcpod={twoData?.tcpod?.data} />}
        </vstack>
    );
};